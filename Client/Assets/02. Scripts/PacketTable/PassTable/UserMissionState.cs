// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketTable.PassTable
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct UserMissionState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static UserMissionState GetRootAsUserMissionState(ByteBuffer _bb) { return GetRootAsUserMissionState(_bb, new UserMissionState()); }
  public static UserMissionState GetRootAsUserMissionState(ByteBuffer _bb, UserMissionState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UserMissionState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MissionIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Progress { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsRewarded { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long CompleteTime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<PacketTable.PassTable.UserMissionState> CreateUserMissionState(FlatBufferBuilder builder,
      int mission_index = 0,
      int progress = 0,
      bool is_rewarded = false,
      long complete_time = 0) {
    builder.StartTable(4);
    UserMissionState.AddCompleteTime(builder, complete_time);
    UserMissionState.AddProgress(builder, progress);
    UserMissionState.AddMissionIndex(builder, mission_index);
    UserMissionState.AddIsRewarded(builder, is_rewarded);
    return UserMissionState.EndUserMissionState(builder);
  }

  public static void StartUserMissionState(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddMissionIndex(FlatBufferBuilder builder, int missionIndex) { builder.AddInt(0, missionIndex, 0); }
  public static void AddProgress(FlatBufferBuilder builder, int progress) { builder.AddInt(1, progress, 0); }
  public static void AddIsRewarded(FlatBufferBuilder builder, bool isRewarded) { builder.AddBool(2, isRewarded, false); }
  public static void AddCompleteTime(FlatBufferBuilder builder, long completeTime) { builder.AddLong(3, completeTime, 0); }
  public static Offset<PacketTable.PassTable.UserMissionState> EndUserMissionState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PacketTable.PassTable.UserMissionState>(o);
  }
}


static public class UserMissionStateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*MissionIndex*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Progress*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*IsRewarded*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*CompleteTime*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
