// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketTable.UtilitiesTable
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ItemInfo GetRootAsItemInfo(ByteBuffer _bb) { return GetRootAsItemInfo(_bb, new ItemInfo()); }
  public static ItemInfo GetRootAsItemInfo(ByteBuffer _bb, ItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ItemUid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int OwnerUid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemCode { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Count { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemType { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<PacketTable.UtilitiesTable.ItemInfo> CreateItemInfo(FlatBufferBuilder builder,
      int item_uid = 0,
      int owner_uid = 0,
      int item_code = 0,
      int count = 0,
      int item_type = 0) {
    builder.StartTable(5);
    ItemInfo.AddItemType(builder, item_type);
    ItemInfo.AddCount(builder, count);
    ItemInfo.AddItemCode(builder, item_code);
    ItemInfo.AddOwnerUid(builder, owner_uid);
    ItemInfo.AddItemUid(builder, item_uid);
    return ItemInfo.EndItemInfo(builder);
  }

  public static void StartItemInfo(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddItemUid(FlatBufferBuilder builder, int itemUid) { builder.AddInt(0, itemUid, 0); }
  public static void AddOwnerUid(FlatBufferBuilder builder, int ownerUid) { builder.AddInt(1, ownerUid, 0); }
  public static void AddItemCode(FlatBufferBuilder builder, int itemCode) { builder.AddInt(2, itemCode, 0); }
  public static void AddCount(FlatBufferBuilder builder, int count) { builder.AddInt(3, count, 0); }
  public static void AddItemType(FlatBufferBuilder builder, int itemType) { builder.AddInt(4, itemType, 0); }
  public static Offset<PacketTable.UtilitiesTable.ItemInfo> EndItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PacketTable.UtilitiesTable.ItemInfo>(o);
  }
}


static public class ItemInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ItemUid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*OwnerUid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ItemCode*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Count*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*ItemType*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
