// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketTable.UtilitiesTable
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CustomizingItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CustomizingItem GetRootAsCustomizingItem(ByteBuffer _bb) { return GetRootAsCustomizingItem(_bb, new CustomizingItem()); }
  public static CustomizingItem GetRootAsCustomizingItem(ByteBuffer _bb, CustomizingItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CustomizingItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Type { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemUid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemCode { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<PacketTable.UtilitiesTable.CustomizingItem> CreateCustomizingItem(FlatBufferBuilder builder,
      int type = 0,
      int item_uid = 0,
      int item_code = 0) {
    builder.StartTable(3);
    CustomizingItem.AddItemCode(builder, item_code);
    CustomizingItem.AddItemUid(builder, item_uid);
    CustomizingItem.AddType(builder, type);
    return CustomizingItem.EndCustomizingItem(builder);
  }

  public static void StartCustomizingItem(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(0, type, 0); }
  public static void AddItemUid(FlatBufferBuilder builder, int itemUid) { builder.AddInt(1, itemUid, 0); }
  public static void AddItemCode(FlatBufferBuilder builder, int itemCode) { builder.AddInt(2, itemCode, 0); }
  public static Offset<PacketTable.UtilitiesTable.CustomizingItem> EndCustomizingItem(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PacketTable.UtilitiesTable.CustomizingItem>(o);
  }

  public static VectorOffset CreateSortedVectorOfCustomizingItem(FlatBufferBuilder builder, Offset<CustomizingItem>[] offsets) {
    Array.Sort(offsets,
      (Offset<CustomizingItem> o1, Offset<CustomizingItem> o2) =>
        new CustomizingItem().__assign(builder.DataBuffer.Length - o1.Value, builder.DataBuffer).Type.CompareTo(new CustomizingItem().__assign(builder.DataBuffer.Length - o2.Value, builder.DataBuffer).Type));
    return builder.CreateVectorOfTables(offsets);
  }

  public static CustomizingItem? __lookup_by_key(int vectorLocation, int key, ByteBuffer bb) {
    CustomizingItem obj_ = new CustomizingItem();
    int span = bb.GetInt(vectorLocation - 4);
    int start = 0;
    while (span != 0) {
      int middle = span / 2;
      int tableOffset = Table.__indirect(vectorLocation + 4 * (start + middle), bb);
      obj_.__assign(tableOffset, bb);
      int comp = obj_.Type.CompareTo(key);
      if (comp > 0) {
        span = middle;
      } else if (comp < 0) {
        middle++;
        start += middle;
        span -= middle;
      } else {
        return obj_;
      }
    }
    return null;
  }
}


static public class CustomizingItemVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Type*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*ItemUid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ItemCode*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
