// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketTable.UtilitiesTable
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DayAttendanceInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static DayAttendanceInfo GetRootAsDayAttendanceInfo(ByteBuffer _bb) { return GetRootAsDayAttendanceInfo(_bb, new DayAttendanceInfo()); }
  public static DayAttendanceInfo GetRootAsDayAttendanceInfo(ByteBuffer _bb, DayAttendanceInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DayAttendanceInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int DayNumber { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public PacketTable.UtilitiesTable.Date? AttendanceDate { get { int o = __p.__offset(6); return o != 0 ? (PacketTable.UtilitiesTable.Date?)(new PacketTable.UtilitiesTable.Date()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public bool IsRewarded { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<PacketTable.UtilitiesTable.DayAttendanceInfo> CreateDayAttendanceInfo(FlatBufferBuilder builder,
      int day_number = 0,
      Offset<PacketTable.UtilitiesTable.Date> attendance_dateOffset = default(Offset<PacketTable.UtilitiesTable.Date>),
      bool is_rewarded = false) {
    builder.StartTable(3);
    DayAttendanceInfo.AddAttendanceDate(builder, attendance_dateOffset);
    DayAttendanceInfo.AddDayNumber(builder, day_number);
    DayAttendanceInfo.AddIsRewarded(builder, is_rewarded);
    return DayAttendanceInfo.EndDayAttendanceInfo(builder);
  }

  public static void StartDayAttendanceInfo(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddDayNumber(FlatBufferBuilder builder, int dayNumber) { builder.AddInt(0, dayNumber, 0); }
  public static void AddAttendanceDate(FlatBufferBuilder builder, Offset<PacketTable.UtilitiesTable.Date> attendanceDateOffset) { builder.AddOffset(1, attendanceDateOffset.Value, 0); }
  public static void AddIsRewarded(FlatBufferBuilder builder, bool isRewarded) { builder.AddBool(2, isRewarded, false); }
  public static Offset<PacketTable.UtilitiesTable.DayAttendanceInfo> EndDayAttendanceInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PacketTable.UtilitiesTable.DayAttendanceInfo>(o);
  }
}


static public class DayAttendanceInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*DayNumber*/, 4 /*int*/, 4, false)
      && verifier.VerifyTable(tablePos, 6 /*AttendanceDate*/, PacketTable.UtilitiesTable.DateVerify.Verify, false)
      && verifier.VerifyField(tablePos, 8 /*IsRewarded*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
