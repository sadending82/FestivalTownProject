// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketTable.GameTable
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GameInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static GameInfo GetRootAsGameInfo(ByteBuffer _bb) { return GetRootAsGameInfo(_bb, new GameInfo()); }
  public static GameInfo GetRootAsGameInfo(ByteBuffer _bb, GameInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GameInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Ingameid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Roomid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Team { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Gamemode { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsHost { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<PacketTable.GameTable.GameInfo> CreateGameInfo(FlatBufferBuilder builder,
      int ingameid = 0,
      int roomid = 0,
      int team = 0,
      int gamemode = 0,
      bool is_host = false) {
    builder.StartTable(5);
    GameInfo.AddGamemode(builder, gamemode);
    GameInfo.AddTeam(builder, team);
    GameInfo.AddRoomid(builder, roomid);
    GameInfo.AddIngameid(builder, ingameid);
    GameInfo.AddIsHost(builder, is_host);
    return GameInfo.EndGameInfo(builder);
  }

  public static void StartGameInfo(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddIngameid(FlatBufferBuilder builder, int ingameid) { builder.AddInt(0, ingameid, 0); }
  public static void AddRoomid(FlatBufferBuilder builder, int roomid) { builder.AddInt(1, roomid, 0); }
  public static void AddTeam(FlatBufferBuilder builder, int team) { builder.AddInt(2, team, 0); }
  public static void AddGamemode(FlatBufferBuilder builder, int gamemode) { builder.AddInt(3, gamemode, 0); }
  public static void AddIsHost(FlatBufferBuilder builder, bool isHost) { builder.AddBool(4, isHost, false); }
  public static Offset<PacketTable.GameTable.GameInfo> EndGameInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PacketTable.GameTable.GameInfo>(o);
  }
}


static public class GameInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Ingameid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Roomid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Team*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Gamemode*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*IsHost*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
