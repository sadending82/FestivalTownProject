// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketTable.LobbyTable
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CurrencyAmountRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CurrencyAmountRequest GetRootAsCurrencyAmountRequest(ByteBuffer _bb) { return GetRootAsCurrencyAmountRequest(_bb, new CurrencyAmountRequest()); }
  public static CurrencyAmountRequest GetRootAsCurrencyAmountRequest(ByteBuffer _bb, CurrencyAmountRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CurrencyAmountRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Uid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<PacketTable.LobbyTable.CurrencyAmountRequest> CreateCurrencyAmountRequest(FlatBufferBuilder builder,
      int uid = 0) {
    builder.StartTable(1);
    CurrencyAmountRequest.AddUid(builder, uid);
    return CurrencyAmountRequest.EndCurrencyAmountRequest(builder);
  }

  public static void StartCurrencyAmountRequest(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddUid(FlatBufferBuilder builder, int uid) { builder.AddInt(0, uid, 0); }
  public static Offset<PacketTable.LobbyTable.CurrencyAmountRequest> EndCurrencyAmountRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PacketTable.LobbyTable.CurrencyAmountRequest>(o);
  }
}


static public class CurrencyAmountRequestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Uid*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
