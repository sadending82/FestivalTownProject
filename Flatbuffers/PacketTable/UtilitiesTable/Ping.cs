// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketTable.UtilitiesTable
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Ping : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Ping GetRootAsPing(ByteBuffer _bb) { return GetRootAsPing(_bb, new Ping()); }
  public static Ping GetRootAsPing(ByteBuffer _bb, Ping obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Ping __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Time { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<PacketTable.UtilitiesTable.Ping> CreatePing(FlatBufferBuilder builder,
      long time = 0) {
    builder.StartTable(1);
    Ping.AddTime(builder, time);
    return Ping.EndPing(builder);
  }

  public static void StartPing(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTime(FlatBufferBuilder builder, long time) { builder.AddLong(0, time, 0); }
  public static Offset<PacketTable.UtilitiesTable.Ping> EndPing(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PacketTable.UtilitiesTable.Ping>(o);
  }
}


static public class PingVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Time*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
